state는 고정적인 데이터가 아니라 변경될수 있는 데이터를 처리할 때 효율적으로 사용될 수 있습니다. 재미있는 점은 실제로 state값을 변경해서 화면이 변경되면 render() 함수가 다시 실행되어 다시 화면에 적용을 해줍니다.

state 를 사용하려면 class 형 컴포넌트를 사용해야함.

컴포넌트의 라이프 사이클을 이용해서 내부적으로 처리하도록 만들어야함

goBack 함수를 이용해서 10초 뒤로가기 만드는 법

nextDate = this.state.date; 
nextDate.setSeconds(nextDate.getSeconds() - 10);

코드로 간단하게 state 로 date 객체를 새로 선언시켜준뒤 getSeconds 함수로 원하는 시간만 빼주면 끝이다!

==========================================================================

라이프 사이클, API 호출 방법

React 라이브러리를 사용한다면 라이프 사이클에 코딩 스타일을 맞춰줘야함.

라이플사이클을 이해를 해야지만 쉽게 다를 수 있음.

React 컴포넌트 객체가 DOM에 실제로 삽입되기전까지의 과정은 밑에와 같습니다.

1. contructor()
2. componentWillMount()
3. render()
4. componentDidMount() = 처리가 끝나고 불러와지는 함수.

기본적으로 컴포넌트가 모두 구성된 직후인 didmount 함수에서 api호출을 수행하면 효과적.!!
SNS에 처음 로그인 했을때 최근 타임라인 데이터를 API로부터 호출해서 화면에 보여주는 것이 그 예시임.

데이터 변경

기본적으로 화면에 특정한 객체를 랜더링하기위해서는 props 혹은 state 를 사용해야합니다. props와 state는 이러한 과정이
서로 다르지만 대략적으로 다음과 같은 순서로 이뤄집니다.

1. shouldComponentUpdate()
2. componentWillUpdate()
3. render()
4. componentDidUpdate()

상태 변화를 자동으로 감지. 

http://jsonplaceholder.typicode.com/ 

카멜케이스 사용

단순한 클릭함수 = handleClick  // 자바스크립트는 기본적으로 바인딩처리가 되지 않아서 자기가 해야함.

==========================================================================

npm = 패키지 관리 도구

npm install -g create-react-app ( g = 모든 패키지에 다 사용가능)

==========================================================================

app.js 에 body 부분을 수정하면 그대로 컴파일되어 react 에 나타나게됨.
react 프론트엔드서버를 새로고침 안해도 바로 수정되어 나타나짐.

react는 기본적으로 jsx 문법을 따르기때문에 클래스의 이름을 적어줘야함.

정리

index.html 에는 root 라는 위치에는 실제로 app.js 에 있는 app 컴포넌트가 그려지게 되는 것이고
그려지게 되는 것은 customer컴포넌트에서 그려짐 그 내용이 화면에 실제로 출력이 되어지는 내용.

