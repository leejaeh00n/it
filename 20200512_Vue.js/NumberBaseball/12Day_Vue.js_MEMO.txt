2-1 

반복되는 부분은 컴포넌트로 만든다.

data의 중복을 방지하기 위해 컴포넌트에의 데이터는 ()함수형 이어야 하고
해당 data를 리턴해주어야한다.

컴포넌트의 template는 하나의 태그 안에 (동등한 위치) 있어야 한다.

동일 컴포넌트라도 각자의 data를 가진다.(하나의 독립적인 오브젝트라고 생각하기)

컴포넌트는 인스턴스보다 위에
스크립트는 div#root보다는 아래에

컴포넌트는 같은 것을 계속 랜더링 하지만 중복을 제거함. 
랜더링은 화면을 표시에 하는 것 
Vue.js는 단일(독립)컴포넌트가 가능

--------------------------------------------------------------------------------------------------

2-3

props를 컴포넌트 태그에 설정할때 오류 (Html 부분의 props 명은 케밥케이스(kebab-case)로 작성되어야 함)
Prop "props 명" is passed to component <Anonymous>, but the declared prop name is "props 명".
->Html 부분의 props 명을 변경해 줘야한다. (EX: startWord -> start-Word[-추가])
javascript부분의 props 명은 카멜케이스여도 괜찮다. ==>component명도 동일

기법에 대해서 

Camel-case : 첫글자를 대문자로 시작하는 표기법
kebab-case : -(하이픈)으로 단어를 연결하는 표기법


---------------------------------------------------------------------------------------------------
3-1
웹팩은 스크립트가 너무 많아지면 관리와 수정이 어렵기 때문에
하나로 합쳐주려고 사용, 하나로 합칠 파일이 필요한데 그것이 바로 Entry (Main.js)

Terminal 윈도우 조작
nodejs 버전 확인 명령어 : node -v
npm 버전확인 : npm -v
npm 패키지 다운로드 : npm init 패키지명
vue 패키지 다운로드 : npm install vue 또는 npm i vue
웹팩 다운로드 : npm i webpack webpack-cli -D
(-D대신 --save-dev도 가능[-D는 디벨롭환경에서만 쓰겠다는 명령어])

webpack.config.js 에는 webpack에 대한 설정을 적음
webpack 설정은 크게 4가지가 있음(entry, module, plugins, output)

package 만드는법
Terminal 에서 
웹팩을 돌리는 명령어: webpack
명령어 : npm run 스크립트 이름(EX: npm run "webpack")

node 에서 절대경로 설정을 도와주는 함수(path)가 있음
const path = require(id: 'path');

Webpack.config.js

----------------------------------------------------------------------------------------------------------
3-2











-----------------------------------------------------------------------------------------------------------

3-3 

npm run build 에서 오류가 나는 이유

1번째. main.js 에 import 부분을 해석하기 시작하는데

import Vue from 'vue'; = 뷰를 불러오라고하네? = 통과
import NumberBaseball from './Numberbaseball.vue'; = 저 경로에서 숫자야구.vue를 불러 오라고하네? 
읽으려고 했는데 어 근데 template 부분이 Javascript가 아니네? 라고 해석.

webpack은 자바스크립트만 합쳐줌. 그래서 나오는게 바로 Rules 

정규표현식 /\.vue$/, 파일이 .vue 로 끝나는 파일
+ loader 로 template 부분 읽어야함 터미널 -> npm i vue-loader -D ( -D는 개발할때만 쓰겠다는 뜻)
(참고로 npm install 도중 ctrl + c 로 취소가 가능함.)

* 플로그인 불러올때
node환경에서는 require 을 쓰고, vue환경에서는 import 을 쓴다.

!-- package.json 에서 vue랑 vue-template-complier 랑 버젼이 일치해야함. 중요!
